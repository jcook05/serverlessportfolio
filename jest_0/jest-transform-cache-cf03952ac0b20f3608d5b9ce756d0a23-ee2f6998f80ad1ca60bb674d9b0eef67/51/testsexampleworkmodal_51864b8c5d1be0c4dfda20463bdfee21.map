{"version":3,"sources":["tests-example-work-modal.js"],"names":["adapter","Adapter","myWork","title","key","desc","href","github","image","src","diagram","describe","mockCloseModalFn","jest","fn","modal","openModal","open","anchors","find","paragraphs","header2","images","it","expect","type","toEqual","hasClass","toBe","simulate","toHaveBeenCalled","length","get","props","forEach","node","console","log","text","children","gdesc","childAt","alt"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Adapter from 'enzyme-adapter-react-16';\nimport { shallow, mount, render } from 'enzyme';\nimport { configure } from 'enzyme';\nimport ExampleWorkModal  from '../js/example-work-modal';\n\n\n\nconfigure({ adapter: new Adapter() });\n\n\nconst myWork = [\n\n    {\n         title: \"Configuration Management\",\n         key: \"cm\",\n         desc: \"Configuration Management examples\",\n         href: \"../codesample.html\",\n         github: \"https://github.com/jcook05/ansible\",\n         image: {\n             desc: \"Configuration Management examples\", \n             src: \"images/IMG_0111.JPG\"\n             \n        },\n        diagram: {\n         desc: \"DIAGRAM:\",\n         image: \"\"     \n \n    } \n   },\n   {\n     title: \"CICD\",\n     key: \"cicd\",\n     desc: \"CICD example code, Jenkins build and deploy\",\n     href: \"../codesample.html\",\n     github: \"../comingsoon.html\",\n     image: {\n         desc: \"Continuous Integration Continuous Deployment examples\", \n         src: \"images/IMG_0117.JPG\"\n        \n    },\n    diagram: {\n     desc: \"DIAGRAM:  Jenkins Docker Kubernetes Dev Environment\",\n     image: {\n         src: \"images/jendk.jpg\",\n         desc: \"CICD example code, Jenkins build and deploy\"  \n     }\n } \n \n },\n {\n     title: \"Front End\",\n     key: \"frontend\",\n     desc: \"Here are some front end development examples.  I have some examples in react.js as well as some examples in standard javascript.   This portfolio is also written primarily in \\\n     react.js leveraging several react components.  Typically my front end development would focus on internal tools used by the development teams for infrastructure and CICD. You can view the \\\n     basic examples in the CHECK IT OUT and GIT HUB EXAMPLES links above.\"  ,\n     href: \"../codesample.html\",\n     github: \"https://github.com/jcook05/serverlessportfolio\",\n     image: {\n         desc: \"Front End Example Code\", \n         src: \"images/marmot.JPG\"\n        \n    }, \n    \n    diagram: {\n         desc: \"DIAGRAM: Serverless CICD for this Portfolio\",\n         image: {\n                  src: \"images/newport.jpg\",\n                  desc: \"Portfolio CICD Diagram\"\n         }     \n \n    }\n }\n \n \n \n ]\n\n// ensure versions of adapter match your react-dom and react-test-renderer.   enzyme-adapter-react-16 for version 16 of react-dom and test-renderer.\ndescribe(\"ExampleWorkModal tests\", () => { \n\n    \n\n    let mockCloseModalFn = jest.fn();\n    const modal = shallow(<ExampleWorkModal example={myWork[1]} open={false}/>);\n    const openModal = shallow(<ExampleWorkModal example={myWork[1]} open={open} closeModal={mockCloseModalFn}/>);\n    \n\n\n    let anchors = modal.find(\"a\")\n\n    let paragraphs = modal.find(\"p\")\n    let header2 = modal.find(\"h2\");\n    let images = modal.find(\"img\");\n\n    it(\"Should be a 'div' element\", () => {\n       \n        //console.log(ework.debug());\n        expect(modal.type()).toEqual('div');\n        \n\n    });\n\n    it(\"open set correctly\", () => {\n       \n        //console.log(ework.debug());\n        expect(modal.find(\".background--skyBlue\").hasClass(\"modal--closed\")).toBe(true);\n        expect(openModal.find(\".background--skyBlue\").hasClass(\"modal--open\")).toBe(true);\n        \n\n    });\n\n    it(\"Should call closeModal on click\", () => {\n       \n        // used just 1 class from className=\"color--cloud modal__closeButton\"\n        openModal.find(\".modal__closeButton\").simulate('click');\n        \n        expect(mockCloseModalFn).toHaveBeenCalled();\n        \n\n    });\n\n    it(\"Should contain an a element\", () => {\n       \n        //console.log(ework.debug());\n        expect(anchors.length).toEqual(2);\n        \n\n    });\n\n    it(\"Link set correctly\", () => {\n       \n        //console.log(ework.debug());\n        // This is deprecated as node is now hidden by Enzyme\n        //expect(images.node.props.src).toEqual(myWork[0].image.src);\n        // use get() instead to get by index\n        expect(anchors.get(0).props.href).toEqual(myWork[1].href + \"?\" + myWork[1].key);\n        \n\n    });\n\n    it(\"Github set correctly\", () => {\n       \n        \n        expect(anchors.get(1).props.href).toEqual(myWork[1].github);\n        \n\n    });\n\n    it(\"Desc set correctly\", () => {\n       \n       \n        paragraphs.forEach((node) => {\n            console.log(node.text())\n          });\n\n       // view props\n       console.log(paragraphs.get(0).props)\n\n       // used props.children\n       expect(paragraphs.get(0).props.children).toEqual(myWork[1].gdesc);\n        \n\n    });\n\n    it(\"Desc set correctly\", () => {\n       \n       \n        paragraphs.forEach((node) => {\n            console.log(node.text())\n          });\n\n       // view props\n       console.log(paragraphs.get(0).props)\n\n       // used props.children\n       expect(paragraphs.get(1).props.children).toEqual(myWork[1].desc);\n        \n\n    });\n\n\n    it(\"Desc set correctly\", () => {\n       \n       \n        \n       // view props\n       console.log(paragraphs.get(1).props)\n\n       // used props.children\n       expect(paragraphs.get(2).props.children).toEqual(myWork[1].diagram.desc);\n        \n\n    });\n\n   \n\n    it(\"Title set correctly\", () => {\n       \n        \n        //use childAt for text;\n        expect(header2.childAt(0).text()).toEqual(myWork[1].title);\n        \n\n    });\n\n    it(\"Image Description set correctly\", () => {\n       \n        \n        //use childAt for text;\n        expect(images.get(0).props.alt).toEqual(myWork[1].image.desc);\n        \n\n    });\n\n    it(\"Image Source set correctly\", () => {\n       \n        \n        //use childAt for text;\n        expect(images.get(0).props.src).toEqual(myWork[1].image.src);\n        \n\n    });\n\n\n});\n"]}